---
- name: OS Bootstrap | Set timezone
  become: true
  timezone:
    name: "{{ timezone | default('Europe/Athens') }}"

- name: Change hostname
  become: true
  shell: "hostnamectl set-hostname {{ hostname }}"

- name: Remove config items from sshd
  become: true
  lineinfile:
    path: /etc/ssh/sshd_config
    state: absent
    regexp: '^(.*PermitRootLogin.*|.*ClientAliveInterval.*|.*ClientAliveCountMax.*|.*ChallengeResponseAuthentication.*|.*PasswordAuthentication.*|.*UsePAM.*|.*PrintMotd.*)$'

- name: OS Bootstrap | Modify ssh settings
  become: true
  block:
    - name: Modify ssh settings | Modify configuration file
      blockinfile:
        path: /etc/ssh/sshd_config
        block: |
          PermitRootLogin no
          ClientAliveInterval 30
          ClientAliveCountMax 3
          ChallengeResponseAuthentication no
          PasswordAuthentication no
          UsePAM yes
          PrintMotd no
        state: present

    - name: Modify ssh settings | Restart sshd
      service:
        name: "{{ item }}"
        state: restarted
      register: stop_service
      failed_when:
        - stop_service.failed == true
        - '"Could not find the requested service" not in stop_service.msg'
      loop:
        - sshd
        - ssh

- name: Remove extra MOTD messages
  become: true
  shell: rm -f /usr/lib/motd.d/*

- name: OS Bootstrap | Write MOTD
  become: true
  copy:
    src: vars/motd.txt
    dest: /etc/motd
    owner: root
    group: root
    mode: 0644

- name: OS Bootstrap | Disable ipv6
  become: true
  blockinfile:
    path: /etc/sysctl.d/ipv6.conf
    block: |
      net.ipv6.conf.all.disable_ipv6 = 1
      net.ipv6.conf.default.disable_ipv6 = 1
      net.ipv6.conf.lo.disable_ipv6 = 1
    create: true

- name: OS Bootstrap | Disable firewall services
  become: true
  service:
    name: "{{ item }}"
    state: stopped
    enabled: false
  register: stop_service
  failed_when:
    - stop_service.failed == true
    - '"Could not find the requested service" not in stop_service.msg'
  loop:
    - firewalld
    - ufw

- name: Ensure preserve_hostname is set to true on cloud_init config
  become: true
  lineinfile:
    path: /etc/cloud/cloud.cfg
    regexp: '^preserve_hostname: false$'
    line: 'preserve_hostname: true'
    state: present

- name: OS Bootstrap | Patch
  become: true
  when: patch | default(false) | bool
  block:
    - name: OS Bootstrap | Patch | Update
      shell: "{{ update_command }} {{ upgrade_command }}"
    - name: OS Bootstrap | Patch | Reboot
      reboot:

