---
- name: Change hostname
  become: true
  shell: "hostnamectl set-hostname {{ hostname }}"

- name: Control nodes | Update host files
  become: true
  blockinfile:
    path: /etc/hosts
    block: "{{ lookup('file', cluster_hostfiles ) }}"
    state: present

- name: Control nodes | Intialiaze cluster
  become: true
  shell: sudo kubeadm init
  ignore_errors: true # Ignore error in case the cluster is already initialized

- name: Control nodes | Make configuration available to root
  shell: |
    [ -d /root/.kube ] && rm -rf /root/.kube
    mkdir -p /root/.kube
    sudo cp /etc/kubernetes/admin.conf /root/.kube/config
    sudo chown root:root /root/.kube/config

- name: Control nodes | Make configuration available to "{{ kube_user }}"
  when: populate_conf | bool
  shell: |
    userGrp=$(id -g {{ kube_user }})
    [ -d /home/{{ kube_user }}/.kube/config ] && rm -rf /home/{{ kube_user }}/.kube/config
    mkdir -p /home/{{ kube_user }}/.kube
    sudo cp /etc/kubernetes/admin.conf /home/{{ kube_user }}/.kube/config
    sudo chown {{ kube_user }}:$userGrp /home/{{ kube_user }}/.kube/config

- name: Control nodes | Install Calico
  when: install_calico | bool
  shell: "kubectl apply -f https://raw.githubusercontent.com/projectcalico/calico/{{ calico_version }}/manifests/calico.yaml"

- name: Control nodes | Create cluster join token
  shell: kubeadm token create --print-join-command
  register: join_command_output

- name: Control nodes | Set join command fact
  set_fact:
    join_command: "{{ join_command_output.stdout }}"

